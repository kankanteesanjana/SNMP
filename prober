#!/usr/bin/python3

#importing 

import sys,time
import easysnmp
import math
from easysnmp import Session
from easysnmp import snmp_get,snmp_walk

#agent characteristics

agent_information = sys.argv[1]
#splits the information using':'
attribute = agent_information.split(':')
#ip address of the agent
agent_ip = attribute[0]
#port number of the agent
agent_port = attribute[1]
agent_community = attribute[2]
#sample frequency
sample_frequency = float(sys.argv[2])
#sample time
sample_time = 1/sample_frequency 
#total number of samples
samples = int(sys.argv[3])


#oid information
oids = []
oid_current = []
oid_updated = []

for x in range(4, len(sys.argv)):
	oids.append(sys.argv[x])
#sys up time
oids.insert(0,'1.3.6.1.2.1.1.3.0')

def snmp():
	global oid_current, oid_currenttime
	#SNMP session
	session=Session(hostname=agent_ip, remote_port=agent_port, community=agent_community, version=2,timeout=1,retries=1)
	agent_responsereceived = session.get(oids)
	oid_updated = []

	for y in range(1,len(agent_responsereceived)):
		if agent_responsereceived[y].value!='NOSUCHOBJECT' and agent_responsereceived[y].value!='NOSUCHINSTANCE':
			oid_updated.append(int(agent_responsereceived[y].value))
			
                	#calculation of the bit rate
			if count!=0 and len(oid_current)>0:
				difference_in_oid = int(oid_updated[y-1]) - int(oid_current[y-1])
				difference_in_time = round(oid_updatedtime - oid_currenttime,1)
				rate_obtained = int(difference_in_oid/difference_in_time)
				
				#wrapping counter
				if rate_obtained < 0:
					if agent_responsereceived[y].snmp_type == "COUNTER32":
						difference_in_oid = difference_in_oid+2**32
						print(str(oid_updatedtime) + '|' + str(difference_in_oid/difference_in_time) + '|' )

					elif agent_responsereceived[y].snmp_type == "COUNTER64":
						difference_in_oid = difference_in_oid+2**64
						print(str(oid_updatedtime) + '|' + str(difference_in_oid/difference_in_time) + '|' )

				else:
					print(str(oid_updatedtime) + '|'+ str(rate_obtained) + '|' )


	oid_current = oid_updated
	oid_currenttime = oid_updatedtime
	

#to run forever
if samples == -1:
	count = 0
	oid_current = []
	while True:
		oid_updatedtime = (time.time())
		snmp()
		agent_responsereceivedtime = (time.time())
		count=count +1
		time.sleep(abs(sample_time - agent_responsereceivedtime + oid_updatedtime))

else:
	oid_current = []
	for count in range(0, samples+1):
		oid_updatedtime = (time.time())
		snmp()
		agent_responsereceivedtime = (time.time())
		time.sleep(abs(sample_time - agent_responsereceivedtime + oid_updatedtime))
                    
            

